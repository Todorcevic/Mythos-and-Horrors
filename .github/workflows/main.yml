name: Execute tests after push
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
    
     # Free Disk Space
      - name: Free Disk Space (Ubuntu)
            uses: jlumbroso/free-disk-space@v1.3.1
            with:
              # this might remove tools that are actually needed,
              # if set to "true" but frees about 6 GB
              tool-cache: false
              
              # all of these default to true, but feel free to set to
              # "false" if necessary for your workflow
              android: true
              dotnet: false
              haskell: true
              large-packages: true
              docker-images: true
              swap-storage: true

    # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

    # Git LFS Cache
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
    
      - name: Restore LFS cache
        uses: actions/cache@v4.0.1
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
    
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
    # Library Cache
      - name: Cache              
        uses: actions/cache@v4.0.1
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

    # Tests      
      - name: Run tests
        uses: game-ci/unity-test-runner@v4.1.1
        id: myTestStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2022.3.7f1
          projectPath: ./
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+GameRules,+GameView'

      - name: Upload tests coverage
        uses: actions/upload-artifact@v4.3.1
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.myTestStep.outputs.coveragePath }}
            
    Build
      - name: Build
        uses: game-ci/unity-builder@v4.2.1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2022.3.7f1
          versioning: Semantic
          allowDirtyBuild: true
          
      - uses: actions/upload-artifact@v4.3.1
        with:
          name: Build
          path: build
          
          
